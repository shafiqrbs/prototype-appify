{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin fontend2\\\\Development frontend\\\\mantine-app\\\\src\\\\views\\\\components\\\\SideNavbar\\\\NavbarSegmented.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, SegmentedControl, Drawer } from \"@mantine/core\";\nimport { IconShoppingCart, IconLicense, IconMessage2, IconMessages, IconApps, IconSettings, IconLayoutSidebarLeftExpand, IconUsers, IconFileAnalytics, IconLayoutBottombarExpand, IconReceiptRefund } from \"@tabler/icons-react\";\nimport classes from \"./NavbarSegmented.module.css\";\nimport Appbar from \"../Global/AppBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = {\n  account: [{\n    link: \"\",\n    label: \"Appbar\",\n    icon: IconApps\n  }, {\n    link: \"\",\n    label: \"Navbar\",\n    icon: IconLayoutBottombarExpand\n  }, {\n    link: \"\",\n    label: \"Drawer\",\n    icon: IconLayoutSidebarLeftExpand\n  }],\n  general: [{\n    link: \"\",\n    label: \"Orders\",\n    icon: IconShoppingCart\n  }, {\n    link: \"\",\n    label: \"Receipts\",\n    icon: IconLicense\n  }, {\n    link: \"\",\n    label: \"Reviews\",\n    icon: IconMessage2\n  }, {\n    link: \"\",\n    label: \"Messages\",\n    icon: IconMessages\n  }, {\n    link: \"\",\n    label: \"Customers\",\n    icon: IconUsers\n  }, {\n    link: \"\",\n    label: \"Refunds\",\n    icon: IconReceiptRefund\n  }, {\n    link: \"\",\n    label: \"Files\",\n    icon: IconFileAnalytics\n  }]\n};\nconst NavbarSegmented = () => {\n  _s();\n  const [section, setSection] = useState(\"account\");\n  const [active, setActive] = useState(\"Appbar\");\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false); // State to manage the drawer's visibility\n  const [isNavbarDrawerOpen, setIsNavbarDrawerOpen] = useState(false); // State for the new Navbar drawer\n\n  const links = tabs[section].map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n    className: classes.link,\n    \"data-active\": item.label === active || undefined,\n    href: item.link,\n    onClick: event => {\n      event.preventDefault();\n      setActive(item.label);\n\n      // Check if \"Appbar\" link is clicked, and if so, open the drawer\n      if (item.label === \"Appbar\") {\n        setIsDrawerOpen(true);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(item.icon, {\n      className: classes.linkIcon,\n      stroke: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: item.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, item.label, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  const closeDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  // Conditionally render the footer based on the selected section\n  const footer = section === \"account\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.footer,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      style: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        justifyContent: \"space-between\"\n      },\n      onClick: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(IconSettings, {\n        className: classes.linkIcon,\n        stroke: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: classes.navbar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SegmentedControl, {\n        value: section,\n        onChange: value => setSection(value),\n        transitionTimingFunction: \"ease\",\n        fullWidth: true,\n        data: [{\n          label: \"Global\",\n          value: \"account\"\n        }, {\n          label: \"Component\",\n          value: \"general\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.navbarMain,\n      children: links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), footer, /*#__PURE__*/_jsxDEV(Drawer, {\n      title: \"App Bar Drawer\",\n      opened: isDrawerOpen,\n      onClose: closeDrawer,\n      position: \"left\",\n      size: 300 // Set the width of the drawer to 300px\n      ,\n      children: /*#__PURE__*/_jsxDEV(Appbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(NavbarSegmented, \"CMBeda7Gp1flu34MHGdqTXoqO4Y=\");\n_c = NavbarSegmented;\nexport default NavbarSegmented;\nvar _c;\n$RefreshReg$(_c, \"NavbarSegmented\");","map":{"version":3,"names":["React","useState","Button","SegmentedControl","Drawer","IconShoppingCart","IconLicense","IconMessage2","IconMessages","IconApps","IconSettings","IconLayoutSidebarLeftExpand","IconUsers","IconFileAnalytics","IconLayoutBottombarExpand","IconReceiptRefund","classes","Appbar","jsxDEV","_jsxDEV","tabs","account","link","label","icon","general","NavbarSegmented","_s","section","setSection","active","setActive","isDrawerOpen","setIsDrawerOpen","isNavbarDrawerOpen","setIsNavbarDrawerOpen","links","map","item","className","undefined","href","onClick","event","preventDefault","children","linkIcon","stroke","fileName","_jsxFileName","lineNumber","columnNumber","closeDrawer","footer","style","display","marginRight","justifyContent","navbar","value","onChange","transitionTimingFunction","fullWidth","data","navbarMain","title","opened","onClose","position","size","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin fontend2/Development frontend/mantine-app/src/views/components/SideNavbar/NavbarSegmented.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, SegmentedControl, Drawer } from \"@mantine/core\";\r\nimport {\r\n  IconShoppingCart,\r\n  IconLicense,\r\n  IconMessage2,\r\n  IconMessages,\r\n  IconApps,\r\n  IconSettings,\r\n  IconLayoutSidebarLeftExpand,\r\n  IconUsers,\r\n  IconFileAnalytics,\r\n  IconLayoutBottombarExpand,\r\n  IconReceiptRefund,\r\n} from \"@tabler/icons-react\";\r\nimport classes from \"./NavbarSegmented.module.css\";\r\nimport Appbar from \"../Global/AppBar\";\r\n\r\nconst tabs = {\r\n  account: [\r\n    { link: \"\", label: \"Appbar\", icon: IconApps },\r\n    { link: \"\", label: \"Navbar\", icon: IconLayoutBottombarExpand },\r\n    { link: \"\", label: \"Drawer\", icon: IconLayoutSidebarLeftExpand },\r\n  ],\r\n  general: [\r\n    { link: \"\", label: \"Orders\", icon: IconShoppingCart },\r\n    { link: \"\", label: \"Receipts\", icon: IconLicense },\r\n    { link: \"\", label: \"Reviews\", icon: IconMessage2 },\r\n    { link: \"\", label: \"Messages\", icon: IconMessages },\r\n    { link: \"\", label: \"Customers\", icon: IconUsers },\r\n    { link: \"\", label: \"Refunds\", icon: IconReceiptRefund },\r\n    { link: \"\", label: \"Files\", icon: IconFileAnalytics },\r\n  ],\r\n};\r\n\r\nconst NavbarSegmented = () => {\r\n  const [section, setSection] = useState(\"account\");\r\n  const [active, setActive] = useState(\"Appbar\");\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false); // State to manage the drawer's visibility\r\n  const [isNavbarDrawerOpen, setIsNavbarDrawerOpen] = useState(false); // State for the new Navbar drawer\r\n\r\n  const links = tabs[section].map((item) => (\r\n    <a\r\n      className={classes.link}\r\n      data-active={item.label === active || undefined}\r\n      href={item.link}\r\n      key={item.label}\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n        setActive(item.label);\r\n\r\n        // Check if \"Appbar\" link is clicked, and if so, open the drawer\r\n        if (item.label === \"Appbar\") {\r\n          setIsDrawerOpen(true);\r\n        }\r\n      }}\r\n    >\r\n      <item.icon className={classes.linkIcon} stroke={1.5} />\r\n      <span>{item.label}</span>\r\n    </a>\r\n  ));\r\n\r\n  const closeDrawer = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  // Conditionally render the footer based on the selected section\r\n  const footer =\r\n    section === \"account\" ? (\r\n      <div className={classes.footer}>\r\n        <a\r\n          href=\"#\"\r\n          style={{\r\n            display: \"flex\",\r\n            marginRight: \"10px\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n          onClick={(event) => event.preventDefault()}\r\n        >\r\n          <IconSettings className={classes.linkIcon} stroke={1.5} />\r\n          <Button>Save</Button>\r\n        </a>\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <nav className={classes.navbar}>\r\n      <div>\r\n        <SegmentedControl\r\n          value={section}\r\n          onChange={(value) => setSection(value)}\r\n          transitionTimingFunction=\"ease\"\r\n          fullWidth\r\n          data={[\r\n            { label: \"Global\", value: \"account\" },\r\n            { label: \"Component\", value: \"general\" },\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.navbarMain}>{links}</div>\r\n\r\n      {footer}\r\n\r\n      {/* Drawer component with width set to 300px */}\r\n      <Drawer\r\n        title=\"App Bar Drawer\"\r\n        opened={isDrawerOpen}\r\n        onClose={closeDrawer}\r\n        position=\"left\"\r\n        size={300} // Set the width of the drawer to 300px\r\n      >\r\n        {/* Content of the drawer */}\r\n        <Appbar />\r\n      </Drawer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavbarSegmented;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,eAAe;AAChE,SACEC,gBAAgB,EAChBC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,2BAA2B,EAC3BC,SAAS,EACTC,iBAAiB,EACjBC,yBAAyB,EACzBC,iBAAiB,QACZ,qBAAqB;AAC5B,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAG;EACXC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAEf;EAAS,CAAC,EAC7C;IAAEa,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAEV;EAA0B,CAAC,EAC9D;IAAEQ,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAEb;EAA4B,CAAC,CACjE;EACDc,OAAO,EAAE,CACP;IAAEH,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAEnB;EAAiB,CAAC,EACrD;IAAEiB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAElB;EAAY,CAAC,EAClD;IAAEgB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAEjB;EAAa,CAAC,EAClD;IAAEe,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAEhB;EAAa,CAAC,EACnD;IAAEc,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAEZ;EAAU,CAAC,EACjD;IAAEU,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAET;EAAkB,CAAC,EACvD;IAAEO,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAEX;EAAkB,CAAC;AAEzD,CAAC;AAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,SAAS,CAAC;EACjD,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzD,MAAM,CAACiC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErE,MAAMmC,KAAK,GAAGhB,IAAI,CAACQ,OAAO,CAAC,CAACS,GAAG,CAAEC,IAAI,iBACnCnB,OAAA;IACEoB,SAAS,EAAEvB,OAAO,CAACM,IAAK;IACxB,eAAagB,IAAI,CAACf,KAAK,KAAKO,MAAM,IAAIU,SAAU;IAChDC,IAAI,EAAEH,IAAI,CAAChB,IAAK;IAEhBoB,OAAO,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBb,SAAS,CAACO,IAAI,CAACf,KAAK,CAAC;;MAErB;MACA,IAAIe,IAAI,CAACf,KAAK,KAAK,QAAQ,EAAE;QAC3BU,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAE;IAAAY,QAAA,gBAEF1B,OAAA,CAACmB,IAAI,CAACd,IAAI;MAACe,SAAS,EAAEvB,OAAO,CAAC8B,QAAS;MAACC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDhC,OAAA;MAAA0B,QAAA,EAAOP,IAAI,CAACf;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,GAZpBb,IAAI,CAACf,KAAK;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAad,CACJ,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBnB,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMoB,MAAM,GACVzB,OAAO,KAAK,SAAS,gBACnBT,OAAA;IAAKoB,SAAS,EAAEvB,OAAO,CAACqC,MAAO;IAAAR,QAAA,eAC7B1B,OAAA;MACEsB,IAAI,EAAC,GAAG;MACRa,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,WAAW,EAAE,MAAM;QACnBC,cAAc,EAAE;MAClB,CAAE;MACFf,OAAO,EAAGC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC,CAAE;MAAAC,QAAA,gBAE3C1B,OAAA,CAACT,YAAY;QAAC6B,SAAS,EAAEvB,OAAO,CAAC8B,QAAS;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DhC,OAAA,CAACjB,MAAM;QAAA2C,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC,GACJ,IAAI;EAEV,oBACEhC,OAAA;IAAKoB,SAAS,EAAEvB,OAAO,CAAC0C,MAAO;IAAAb,QAAA,gBAC7B1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA,CAAChB,gBAAgB;QACfwD,KAAK,EAAE/B,OAAQ;QACfgC,QAAQ,EAAGD,KAAK,IAAK9B,UAAU,CAAC8B,KAAK,CAAE;QACvCE,wBAAwB,EAAC,MAAM;QAC/BC,SAAS;QACTC,IAAI,EAAE,CACJ;UAAExC,KAAK,EAAE,QAAQ;UAAEoC,KAAK,EAAE;QAAU,CAAC,EACrC;UAAEpC,KAAK,EAAE,WAAW;UAAEoC,KAAK,EAAE;QAAU,CAAC;MACxC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhC,OAAA;MAAKoB,SAAS,EAAEvB,OAAO,CAACgD,UAAW;MAAAnB,QAAA,EAAET;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEhDE,MAAM,eAGPlC,OAAA,CAACf,MAAM;MACL6D,KAAK,EAAC,gBAAgB;MACtBC,MAAM,EAAElC,YAAa;MACrBmC,OAAO,EAAEf,WAAY;MACrBgB,QAAQ,EAAC,MAAM;MACfC,IAAI,EAAE,GAAI,CAAC;MAAA;MAAAxB,QAAA,eAGX1B,OAAA,CAACF,MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlFID,eAAe;AAAA4C,EAAA,GAAf5C,eAAe;AAoFrB,eAAeA,eAAe;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}