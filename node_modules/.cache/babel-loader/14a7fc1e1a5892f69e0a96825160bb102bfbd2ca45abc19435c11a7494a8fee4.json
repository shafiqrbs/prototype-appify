{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin fontend2\\\\Development frontend\\\\mantine-app\\\\src\\\\views\\\\components\\\\SideNavbar\\\\NavbarSegmented.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, SegmentedControl } from \"@mantine/core\";\nimport { IconShoppingCart, IconLicense, IconMessage2, IconMessages, IconFingerprint, IconApps, IconSettings, IconLayoutSidebarLeftExpand, IconUsers, IconFileAnalytics, IconDatabaseImport, IconLayoutBottombarExpand, IconReceiptRefund, IconLogout, IconSwitchHorizontal } from \"@tabler/icons-react\";\nimport classes from \"./NavbarSegmented.module.css\";\n\n// Import your modal component here\nimport YourModalComponent from \"./YourModalComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = {\n  account: [{\n    link: \"\",\n    label: \"Appbar\",\n    icon: IconApps\n  }, {\n    link: \"\",\n    label: \"Navbar\",\n    icon: IconLayoutBottombarExpand\n  }, {\n    link: \"\",\n    label: \"Drawer\",\n    icon: IconLayoutSidebarLeftExpand\n  }],\n  general: [{\n    link: \"\",\n    label: \"Orders\",\n    icon: IconShoppingCart\n  }, {\n    link: \"\",\n    label: \"Receipts\",\n    icon: IconLicense\n  }, {\n    link: \"\",\n    label: \"Reviews\",\n    icon: IconMessage2\n  }, {\n    link: \"\",\n    label: \"Messages\",\n    icon: IconMessages\n  }, {\n    link: \"\",\n    label: \"Customers\",\n    icon: IconUsers\n  }, {\n    link: \"\",\n    label: \"Refunds\",\n    icon: IconReceiptRefund\n  }, {\n    link: \"\",\n    label: \"Files\",\n    icon: IconFileAnalytics\n  }]\n};\nconst NavbarSegmented = () => {\n  _s();\n  const [section, setSection] = useState(\"account\");\n  const [active, setActive] = useState(\"Appbar\");\n\n  // State to track whether the modal should be open or closed\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const links = tabs[section].map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n    className: classes.link,\n    \"data-active\": item.label === active || undefined,\n    href: item.link,\n    onClick: event => {\n      event.preventDefault();\n      setActive(item.label);\n      if (item.label === \"Appbar\") {\n        // Open the modal when \"Appbar\" is clicked\n        setIsModalOpen(true);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(item.icon, {\n      className: classes.linkIcon,\n      stroke: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: item.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, item.label, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n\n  // Conditionally render your modal component\n  const modal = isModalOpen ? /*#__PURE__*/_jsxDEV(YourModalComponent, {\n    onClose: () => setIsModalOpen(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 31\n  }, this) : null;\n\n  // Conditionally render the footer based on the selected section\n  const footer = section === \"account\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.footer,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      style: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        justifyContent: \"space-between\"\n      },\n      onClick: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(IconSettings, {\n        className: classes.linkIcon,\n        stroke: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: classes.navbar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SegmentedControl, {\n        value: section,\n        onChange: value => setSection(value),\n        transitionTimingFunction: \"ease\",\n        fullWidth: true,\n        data: [{\n          label: \"Global\",\n          value: \"account\"\n        }, {\n          label: \"Component\",\n          value: \"general\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.navbarMain,\n      children: links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), footer, modal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(NavbarSegmented, \"ZJItjfuiQaHPJHiC1X+CmZeNYH0=\");\n_c = NavbarSegmented;\nexport default NavbarSegmented;\nvar _c;\n$RefreshReg$(_c, \"NavbarSegmented\");","map":{"version":3,"names":["React","useState","Button","SegmentedControl","IconShoppingCart","IconLicense","IconMessage2","IconMessages","IconFingerprint","IconApps","IconSettings","IconLayoutSidebarLeftExpand","IconUsers","IconFileAnalytics","IconDatabaseImport","IconLayoutBottombarExpand","IconReceiptRefund","IconLogout","IconSwitchHorizontal","classes","YourModalComponent","jsxDEV","_jsxDEV","tabs","account","link","label","icon","general","NavbarSegmented","_s","section","setSection","active","setActive","isModalOpen","setIsModalOpen","links","map","item","className","undefined","href","onClick","event","preventDefault","children","linkIcon","stroke","fileName","_jsxFileName","lineNumber","columnNumber","modal","onClose","footer","style","display","marginRight","justifyContent","navbar","value","onChange","transitionTimingFunction","fullWidth","data","navbarMain","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin fontend2/Development frontend/mantine-app/src/views/components/SideNavbar/NavbarSegmented.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, SegmentedControl } from \"@mantine/core\";\r\nimport { IconShoppingCart, IconLicense, IconMessage2, IconMessages, IconFingerprint, IconApps, IconSettings, IconLayoutSidebarLeftExpand, IconUsers, IconFileAnalytics, IconDatabaseImport, IconLayoutBottombarExpand, IconReceiptRefund, IconLogout, IconSwitchHorizontal } from \"@tabler/icons-react\";\r\nimport classes from \"./NavbarSegmented.module.css\";\r\n\r\n// Import your modal component here\r\nimport YourModalComponent from \"./YourModalComponent\";\r\n\r\nconst tabs = {\r\n  account: [\r\n    { link: \"\", label: \"Appbar\", icon: IconApps },\r\n    { link: \"\", label: \"Navbar\", icon: IconLayoutBottombarExpand },\r\n    { link: \"\", label: \"Drawer\", icon: IconLayoutSidebarLeftExpand },\r\n  ],\r\n  general: [\r\n    { link: \"\", label: \"Orders\", icon: IconShoppingCart },\r\n    { link: \"\", label: \"Receipts\", icon: IconLicense },\r\n    { link: \"\", label: \"Reviews\", icon: IconMessage2 },\r\n    { link: \"\", label: \"Messages\", icon: IconMessages },\r\n    { link: \"\", label: \"Customers\", icon: IconUsers },\r\n    { link: \"\", label: \"Refunds\", icon: IconReceiptRefund },\r\n    { link: \"\", label: \"Files\", icon: IconFileAnalytics },\r\n  ],\r\n};\r\n\r\nconst NavbarSegmented = () => {\r\n  const [section, setSection] = useState(\"account\");\r\n  const [active, setActive] = useState(\"Appbar\");\r\n\r\n  // State to track whether the modal should be open or closed\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const links = tabs[section].map((item) => (\r\n    <a\r\n      className={classes.link}\r\n      data-active={item.label === active || undefined}\r\n      href={item.link}\r\n      key={item.label}\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n        setActive(item.label);\r\n\r\n        if (item.label === \"Appbar\") {\r\n          // Open the modal when \"Appbar\" is clicked\r\n          setIsModalOpen(true);\r\n        }\r\n      }}\r\n    >\r\n      <item.icon className={classes.linkIcon} stroke={1.5} />\r\n      <span>{item.label}</span>\r\n    </a>\r\n  ));\r\n\r\n  // Conditionally render your modal component\r\n  const modal = isModalOpen ? <YourModalComponent onClose={() => setIsModalOpen(false)} /> : null;\r\n\r\n  // Conditionally render the footer based on the selected section\r\n  const footer =\r\n    section === \"account\" ? (\r\n      <div className={classes.footer}>\r\n        <a\r\n          href=\"#\"\r\n          style={{ display: \"flex\", marginRight: \"10px\", justifyContent: \"space-between\" }}\r\n          onClick={(event) => event.preventDefault()}\r\n        >\r\n          <IconSettings className={classes.linkIcon} stroke={1.5} />\r\n          <Button>Save</Button>\r\n        </a>\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <nav className={classes.navbar}>\r\n      <div>\r\n        <SegmentedControl\r\n          value={section}\r\n          onChange={(value) => setSection(value)}\r\n          transitionTimingFunction=\"ease\"\r\n          fullWidth\r\n          data={[\r\n            { label: \"Global\", value: \"account\" },\r\n            { label: \"Component\", value: \"general\" },\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.navbarMain}>{links}</div>\r\n\r\n      {footer}\r\n\r\n      {modal}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavbarSegmented;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}