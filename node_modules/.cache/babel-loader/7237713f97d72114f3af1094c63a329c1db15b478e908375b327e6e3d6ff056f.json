{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin frontend\\\\src\\\\views\\\\components\\\\Order\\\\Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { IconPlus, IconMinus } from \"@tabler/icons-react\";\nimport { Accordion } from \"@mantine/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = () => {\n  _s();\n  const groceries = [{\n    emoji: \"🍎\",\n    value: \"Apples\",\n    description: \"Crisp and refreshing fruit. Apples are known for their versatility and nutritional benefits. They come in a variety of flavors and are great for snacking, baking, or adding to salads.\"\n  }, {\n    emoji: \"🍌\",\n    value: \"Bananas\",\n    description: \"Naturally sweet and potassium-rich fruit. Bananas are a popular choice for their energy-boosting properties and can be enjoyed as a quick snack, added to smoothies, or used in baking.\"\n  }, {\n    emoji: \"🥦\",\n    value: \"Broccoli\",\n    description: \"Nutrient-packed green vegetable. Broccoli is packed with vitamins, minerals, and fiber. It has a distinct flavor and can be enjoyed steamed, roasted, or added to stir-fries.\"\n  }];\n\n  // Use an object to store the open/closed state for each item\n  const [itemStates, setItemStates] = useState({});\n  const toggleChevronIcon = value => {\n    setItemStates(prevStates => {\n      // Toggle the state for the specific item\n      const newState = {\n        ...prevStates,\n        [value]: !prevStates[value]\n      };\n      return newState;\n    });\n  };\n  const items = groceries.map(item => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    value: item.value,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Control, {\n      icon: item.emoji,\n      onClick: () => toggleChevronIcon(item.value),\n      children: item.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Panel, {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, item.value, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    chevronPosition: \"left\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      value: item.props.value,\n      isOpen: itemStates[item.props.value],\n      children: /*#__PURE__*/React.cloneElement(item, {\n        onClick: () => toggleChevronIcon(item.props.value)\n      })\n    }, item.props.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"5J9XIGUHFUqb9uevKDJnUEoNcV4=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","IconPlus","IconMinus","Accordion","jsxDEV","_jsxDEV","Order","_s","groceries","emoji","value","description","itemStates","setItemStates","toggleChevronIcon","prevStates","newState","items","map","item","Item","children","Control","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Panel","chevronPosition","props","isOpen","cloneElement","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin frontend/src/views/components/Order/Order.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { IconPlus, IconMinus } from \"@tabler/icons-react\";\r\nimport { Accordion } from \"@mantine/core\";\r\n\r\nconst Order = () => {\r\n  const groceries = [\r\n    {\r\n      emoji: \"🍎\",\r\n      value: \"Apples\",\r\n      description:\r\n        \"Crisp and refreshing fruit. Apples are known for their versatility and nutritional benefits. They come in a variety of flavors and are great for snacking, baking, or adding to salads.\",\r\n    },\r\n    {\r\n      emoji: \"🍌\",\r\n      value: \"Bananas\",\r\n      description:\r\n        \"Naturally sweet and potassium-rich fruit. Bananas are a popular choice for their energy-boosting properties and can be enjoyed as a quick snack, added to smoothies, or used in baking.\",\r\n    },\r\n    {\r\n      emoji: \"🥦\",\r\n      value: \"Broccoli\",\r\n      description:\r\n        \"Nutrient-packed green vegetable. Broccoli is packed with vitamins, minerals, and fiber. It has a distinct flavor and can be enjoyed steamed, roasted, or added to stir-fries.\",\r\n    },\r\n  ];\r\n\r\n  // Use an object to store the open/closed state for each item\r\n  const [itemStates, setItemStates] = useState({});\r\n\r\n  const toggleChevronIcon = (value) => {\r\n    setItemStates((prevStates) => {\r\n      // Toggle the state for the specific item\r\n      const newState = { ...prevStates, [value]: !prevStates[value] };\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const items = groceries.map((item) => (\r\n    <Accordion.Item key={item.value} value={item.value}>\r\n      <Accordion.Control\r\n        icon={item.emoji}\r\n        onClick={() => toggleChevronIcon(item.value)}\r\n      >\r\n        {item.value}\r\n      </Accordion.Control>\r\n      <Accordion.Panel>{item.description}</Accordion.Panel>\r\n    </Accordion.Item>\r\n  ));\r\n\r\n  return (\r\n    <Accordion chevronPosition=\"left\" >\r\n      {items.map((item) => (\r\n        <Accordion.Item\r\n          key={item.props.value}\r\n          value={item.props.value}\r\n          isOpen={itemStates[item.props.value]}\r\n        >\r\n          {React.cloneElement(item, {\r\n            onClick: () => toggleChevronIcon(item.props.value),\r\n          })}\r\n        </Accordion.Item>\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,qBAAqB;AACzD,SAASC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,SAAS,GAAG,CAChB;IACEC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,QAAQ;IACfC,WAAW,EACT;EACJ,CAAC,EACD;IACEF,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAChBC,WAAW,EACT;EACJ,CAAC,EACD;IACEF,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,UAAU;IACjBC,WAAW,EACT;EACJ,CAAC,CACF;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMc,iBAAiB,GAAIJ,KAAK,IAAK;IACnCG,aAAa,CAAEE,UAAU,IAAK;MAC5B;MACA,MAAMC,QAAQ,GAAG;QAAE,GAAGD,UAAU;QAAE,CAACL,KAAK,GAAG,CAACK,UAAU,CAACL,KAAK;MAAE,CAAC;MAC/D,OAAOM,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,KAAK,GAAGT,SAAS,CAACU,GAAG,CAAEC,IAAI,iBAC/Bd,OAAA,CAACF,SAAS,CAACiB,IAAI;IAAkBV,KAAK,EAAES,IAAI,CAACT,KAAM;IAAAW,QAAA,gBACjDhB,OAAA,CAACF,SAAS,CAACmB,OAAO;MAChBC,IAAI,EAAEJ,IAAI,CAACV,KAAM;MACjBe,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACK,IAAI,CAACT,KAAK,CAAE;MAAAW,QAAA,EAE5CF,IAAI,CAACT;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACpBvB,OAAA,CAACF,SAAS,CAAC0B,KAAK;MAAAR,QAAA,EAAEF,IAAI,CAACR;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAA,GAPlCT,IAAI,CAACT,KAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQf,CACjB,CAAC;EAEF,oBACEvB,OAAA,CAACF,SAAS;IAAC2B,eAAe,EAAC,MAAM;IAAAT,QAAA,EAC9BJ,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACdd,OAAA,CAACF,SAAS,CAACiB,IAAI;MAEbV,KAAK,EAAES,IAAI,CAACY,KAAK,CAACrB,KAAM;MACxBsB,MAAM,EAAEpB,UAAU,CAACO,IAAI,CAACY,KAAK,CAACrB,KAAK,CAAE;MAAAW,QAAA,eAEpCtB,KAAK,CAACkC,YAAY,CAACd,IAAI,EAAE;QACxBK,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACK,IAAI,CAACY,KAAK,CAACrB,KAAK;MACnD,CAAC;IAAC,GANGS,IAAI,CAACY,KAAK,CAACrB,KAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOP,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACrB,EAAA,CA5DID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}