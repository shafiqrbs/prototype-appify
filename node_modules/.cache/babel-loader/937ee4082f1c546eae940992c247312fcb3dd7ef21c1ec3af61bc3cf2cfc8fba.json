{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin fontend\\\\Development frontend\\\\mantine-app\\\\src\\\\views\\\\components\\\\Home\\\\CategoryWithProductCustomize\\\\CustomizeCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Flex, Accordion, ActionIcon, Stack } from \"@mantine/core\";\nimport { IconColumns1 } from \"@tabler/icons-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomizeCategory = () => {\n  _s();\n  const [selectionStates, setSelectionStates] = useState([true, false, false, false, false, false]);\n  const toggleSelection = index => {\n    const newSelectionStates = selectionStates.map((state, i) => i === index ? true : false);\n    setSelectionStates(newSelectionStates);\n  };\n  const accordionItems = [{\n    title: \"Type\",\n    icons: [[{\n      w: 150,\n      h: 50\n    }, {\n      w: 100,\n      h: 50,\n      ml: \"xs\"\n    }, {\n      w: 50,\n      h: 50,\n      ml: \"xs\"\n    }], [{\n      w: 150,\n      h: 100\n    }, {\n      w: 100,\n      h: 100,\n      ml: \"xs\"\n    }, {\n      w: 50,\n      h: 100,\n      ml: \"xs\"\n    }]]\n  }\n  // Add more items as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: accordionItems.map((item, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      value: `type-${index}`,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Control, {\n        bg: \"#FFFFFF\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Panel, {\n        bg: \"#FFFFFF\",\n        children: item.icons.map((row, i) => /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 0,\n          direction: \"horizontal\",\n          children: row.map((icon, j) => /*#__PURE__*/_jsxDEV(ActionIcon, {\n            variant: selectionStates[j + i * row.length] ? \"filled\" : \"default\",\n            onClick: () => toggleSelection(j + i * row.length),\n            color: \"indigo\",\n            ...icon,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              children: Array(3).fill( /*#__PURE__*/_jsxDEV(IconColumns1, {\n                style: {\n                  width: \"100%\",\n                  height: \"100%\"\n                },\n                stroke: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(CustomizeCategory, \"E3ZFH7Py+HYA91OgehvLI1feHpg=\");\n_c = CustomizeCategory;\nexport default CustomizeCategory;\nvar _c;\n$RefreshReg$(_c, \"CustomizeCategory\");","map":{"version":3,"names":["React","useState","Flex","Accordion","ActionIcon","Stack","IconColumns1","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomizeCategory","_s","selectionStates","setSelectionStates","toggleSelection","index","newSelectionStates","map","state","i","accordionItems","title","icons","w","h","ml","children","item","Item","value","Control","bg","fileName","_jsxFileName","lineNumber","columnNumber","Panel","row","gap","direction","icon","j","variant","length","onClick","color","Array","fill","style","width","height","stroke","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin fontend/Development frontend/mantine-app/src/views/components/Home/CategoryWithProductCustomize/CustomizeCategory.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Flex, Accordion, ActionIcon, Stack } from \"@mantine/core\";\r\nimport { IconColumns1 } from \"@tabler/icons-react\";\r\n\r\nconst CustomizeCategory = () => {\r\n  const [selectionStates, setSelectionStates] = useState([\r\n    true,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  const toggleSelection = (index) => {\r\n    const newSelectionStates = selectionStates.map((state, i) =>\r\n      i === index ? true : false\r\n    );\r\n    setSelectionStates(newSelectionStates);\r\n  };\r\n\r\n  const accordionItems = [\r\n    {\r\n      title: \"Type\",\r\n      icons: [\r\n        [\r\n          { w: 150, h: 50 },\r\n          { w: 100, h: 50, ml: \"xs\" },\r\n          { w: 50, h: 50, ml: \"xs\" },\r\n        ],\r\n        [\r\n          { w: 150, h: 100 },\r\n          { w: 100, h: 100, ml: \"xs\" },\r\n          { w: 50, h: 100, ml: \"xs\" },\r\n        ],\r\n      ],\r\n    },\r\n    // Add more items as needed\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {accordionItems.map((item, index) => (\r\n        <Accordion.Item key={index} value={`type-${index}`}>\r\n          <Accordion.Control bg=\"#FFFFFF\">{item.title}</Accordion.Control>\r\n          <Accordion.Panel bg=\"#FFFFFF\">\r\n            {item.icons.map((row, i) => (\r\n              <Stack key={i} gap={0} direction=\"horizontal\">\r\n                {row.map((icon, j) => (\r\n                  <ActionIcon\r\n                    key={j}\r\n                    variant={selectionStates[j + i * row.length] ? \"filled\" : \"default\"}\r\n                    onClick={() => toggleSelection(j + i * row.length)}\r\n                    color=\"indigo\"\r\n                    {...icon}\r\n                  >\r\n                    <Flex>\r\n                      {Array(3).fill(\r\n                        <IconColumns1\r\n                          style={{ width: \"100%\", height: \"100%\" }}\r\n                          stroke={1}\r\n                        />\r\n                      )}\r\n                    </Flex>\r\n                  </ActionIcon>\r\n                ))}\r\n              </Stack>\r\n            ))}\r\n          </Accordion.Panel>\r\n        </Accordion.Item>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomizeCategory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}