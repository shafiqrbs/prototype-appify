{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin fontend\\\\Development frontend\\\\mantine-app\\\\src\\\\views\\\\components\\\\Home\\\\CategoryWithProductCustomize\\\\CustomizeCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Text, ColorPicker, Input, Slider, IconPlus, Checkbox, ActionIcon, Accordion } from \"@mantine/core\";\nimport { IconBold, IconUnderline, IconItalic, IconLetterN } from \"@tabler/icons-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomizeCategory = () => {\n  _s();\n  const [categoryWithProductRadiusValue, setCategoryWithProductRadiusValue] = useState(1);\n  const handleCategoryWithProductRadiusChange = newValue => {\n    setCategoryWithProductRadiusValue(newValue);\n  };\n  const handleCategoryWithProductRadiusIncrement = () => {\n    const newValue = categoryWithProductRadiusValue + 1;\n    if (newValue <= 100) {\n      setCategoryWithProductRadiusValue(newValue);\n    }\n  };\n  const [editStates, setEditStates] = useState({\n    productName: false,\n    productRate: false,\n    categoryName: false\n  });\n  const toggleEditState = key => {\n    setEditStates(prevState => ({\n      ...Object.keys(prevState).reduce((acc, k) => ({\n        ...acc,\n        [k]: k === key\n      }), {})\n    }));\n  };\n  const [productNameTextSizeValue, setProductNameTextSizeValue] = useState(1);\n  const handleProductNameTextSizeChange = newValue => {\n    setProductNameTextSizeValue(newValue);\n  };\n  const handleProductNameTextSizeIncrement = () => {\n    const newValue = productNameTextSizeValue + 1;\n    if (newValue <= 20) {\n      setProductNameTextSizeValue(newValue);\n    }\n  };\n  const icons = [{\n    name: \"IconLetterN\",\n    component: /*#__PURE__*/_jsxDEV(IconLetterN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 39\n    }, this),\n    style: \"normal\"\n  }, {\n    name: \"IconBold\",\n    component: /*#__PURE__*/_jsxDEV(IconBold, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }, this),\n    style: \"bold\"\n  }, {\n    name: \"IconItalic\",\n    component: /*#__PURE__*/_jsxDEV(IconItalic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 38\n    }, this),\n    style: \"italic\"\n  }, {\n    name: \"IconUnderline\",\n    component: /*#__PURE__*/_jsxDEV(IconUnderline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }, this),\n    style: \"underline\"\n  }];\n  const [selectedIcon, setSelectedIcon] = useState(0);\n  const handleIconClick = index => {\n    setSelectedIcon(index);\n  };\n  const sections = [{\n    title: \"Product Name\",\n    state: editStates.productName,\n    toggleEditState: () => toggleEditState(\"productName\")\n  }, {\n    title: \"Product Rate\",\n    state: editStates.productRate,\n    toggleEditState: () => toggleEditState(\"productRate\")\n  }, {\n    title: \"Category Name\",\n    state: editStates.categoryName,\n    toggleEditState: () => toggleEditState(\"categoryName\")\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      value: `customization-${section.title.toLowerCase()}`,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Control, {\n        bg: \"#FFFFFF\",\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Panel, {\n        bg: \"#FFFFFF\",\n        children: section.state && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Background Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n            w: \"auto\",\n            size: \"lg\",\n            format: \"rgba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Box Radius\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(CustomizeCategory, \"bso6krpcGLyYar9leT3fHrJNhSw=\");\n_c = CustomizeCategory;\nexport default CustomizeCategory;\nvar _c;\n$RefreshReg$(_c, \"CustomizeCategory\");","map":{"version":3,"names":["React","useState","Text","ColorPicker","Input","Slider","IconPlus","Checkbox","ActionIcon","Accordion","IconBold","IconUnderline","IconItalic","IconLetterN","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomizeCategory","_s","categoryWithProductRadiusValue","setCategoryWithProductRadiusValue","handleCategoryWithProductRadiusChange","newValue","handleCategoryWithProductRadiusIncrement","editStates","setEditStates","productName","productRate","categoryName","toggleEditState","key","prevState","Object","keys","reduce","acc","k","productNameTextSizeValue","setProductNameTextSizeValue","handleProductNameTextSizeChange","handleProductNameTextSizeIncrement","icons","name","component","fileName","_jsxFileName","lineNumber","columnNumber","style","selectedIcon","setSelectedIcon","handleIconClick","index","sections","title","state","children","map","section","Item","value","toLowerCase","Control","bg","Panel","w","size","format","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin fontend/Development frontend/mantine-app/src/views/components/Home/CategoryWithProductCustomize/CustomizeCategory.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  ColorPicker,\r\n  Input,\r\n  Slider,\r\n  IconPlus,\r\n  Checkbox,\r\n  ActionIcon,\r\n  Accordion\r\n} from \"@mantine/core\";\r\nimport { IconBold, IconUnderline, IconItalic, IconLetterN } from \"@tabler/icons-react\";\r\n\r\nconst CustomizeCategory = () => {\r\n  const [categoryWithProductRadiusValue, setCategoryWithProductRadiusValue] = useState(1);\r\n  const handleCategoryWithProductRadiusChange = (newValue) => {\r\n    setCategoryWithProductRadiusValue(newValue);\r\n  };\r\n\r\n  const handleCategoryWithProductRadiusIncrement = () => {\r\n    const newValue = categoryWithProductRadiusValue + 1;\r\n    if (newValue <= 100) {\r\n      setCategoryWithProductRadiusValue(newValue);\r\n    }\r\n  };\r\n\r\n  const [editStates, setEditStates] = useState({\r\n    productName: false,\r\n    productRate: false,\r\n    categoryName: false,\r\n  });\r\n\r\n  const toggleEditState = (key) => {\r\n    setEditStates((prevState) => ({\r\n      ...Object.keys(prevState).reduce((acc, k) => ({ ...acc, [k]: k === key }), {}),\r\n    }));\r\n  };\r\n\r\n  const [productNameTextSizeValue, setProductNameTextSizeValue] = useState(1);\r\n  const handleProductNameTextSizeChange = (newValue) => {\r\n    setProductNameTextSizeValue(newValue);\r\n  };\r\n\r\n  const handleProductNameTextSizeIncrement = () => {\r\n    const newValue = productNameTextSizeValue + 1;\r\n    if (newValue <= 20) {\r\n      setProductNameTextSizeValue(newValue);\r\n    }\r\n  };\r\n\r\n  const icons = [\r\n    { name: \"IconLetterN\", component: <IconLetterN />, style: \"normal\" },\r\n    { name: \"IconBold\", component: <IconBold />, style: \"bold\" },\r\n    { name: \"IconItalic\", component: <IconItalic />, style: \"italic\" },\r\n    { name: \"IconUnderline\", component: <IconUnderline />, style: \"underline\" },\r\n  ];\r\n\r\n  const [selectedIcon, setSelectedIcon] = useState(0);\r\n\r\n  const handleIconClick = (index) => {\r\n    setSelectedIcon(index);\r\n  };\r\n\r\n  const sections = [\r\n    {\r\n      title: \"Product Name\",\r\n      state: editStates.productName,\r\n      toggleEditState: () => toggleEditState(\"productName\"),\r\n    },\r\n    {\r\n      title: \"Product Rate\",\r\n      state: editStates.productRate,\r\n      toggleEditState: () => toggleEditState(\"productRate\"),\r\n    },\r\n    {\r\n      title: \"Category Name\",\r\n      state: editStates.categoryName,\r\n      toggleEditState: () => toggleEditState(\"categoryName\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* Render the sections using mapping */}\r\n      {sections.map((section, index) => (\r\n        <Accordion.Item key={index} value={`customization-${section.title.toLowerCase()}`}>\r\n          <Accordion.Control bg=\"#FFFFFF\">{section.title}</Accordion.Control>\r\n          <Accordion.Panel bg=\"#FFFFFF\">\r\n            {/* Render each section based on its state */}\r\n            {section.state && (\r\n              <div>\r\n                {/* Your section content here */}\r\n                <Text>Background Color</Text>\r\n                <ColorPicker w=\"auto\" size=\"lg\" format=\"rgba\" />\r\n\r\n                {/* Box Radius */}\r\n                <div>\r\n                  <Text>Box Radius</Text>\r\n                  <div>\r\n                    {/* Your box radius content here */}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Other content specific to the section */}\r\n                {/* ... */}\r\n              </div>\r\n            )}\r\n          </Accordion.Panel>\r\n        </Accordion.Item>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomizeCategory;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,IAAI,EACJC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,SAAS,QACJ,eAAe;AACtB,SAASC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,8BAA8B,EAAEC,iCAAiC,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvF,MAAMqB,qCAAqC,GAAIC,QAAQ,IAAK;IAC1DF,iCAAiC,CAACE,QAAQ,CAAC;EAC7C,CAAC;EAED,MAAMC,wCAAwC,GAAGA,CAAA,KAAM;IACrD,MAAMD,QAAQ,GAAGH,8BAA8B,GAAG,CAAC;IACnD,IAAIG,QAAQ,IAAI,GAAG,EAAE;MACnBF,iCAAiC,CAACE,QAAQ,CAAC;IAC7C;EACF,CAAC;EAED,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC;IAC3C0B,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAIC,GAAG,IAAK;IAC/BL,aAAa,CAAEM,SAAS,KAAM;MAC5B,GAAGC,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,MAAM;QAAE,GAAGD,GAAG;QAAE,CAACC,CAAC,GAAGA,CAAC,KAAKN;MAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM,CAACO,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EAC3E,MAAMuC,+BAA+B,GAAIjB,QAAQ,IAAK;IACpDgB,2BAA2B,CAAChB,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMkB,kCAAkC,GAAGA,CAAA,KAAM;IAC/C,MAAMlB,QAAQ,GAAGe,wBAAwB,GAAG,CAAC;IAC7C,IAAIf,QAAQ,IAAI,EAAE,EAAE;MAClBgB,2BAA2B,CAAChB,QAAQ,CAAC;IACvC;EACF,CAAC;EAED,MAAMmB,KAAK,GAAG,CACZ;IAAEC,IAAI,EAAE,aAAa;IAAEC,SAAS,eAAE7B,OAAA,CAACF,WAAW;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpE;IAAEN,IAAI,EAAE,UAAU;IAAEC,SAAS,eAAE7B,OAAA,CAACL,QAAQ;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAO,CAAC,EAC5D;IAAEN,IAAI,EAAE,YAAY;IAAEC,SAAS,eAAE7B,OAAA,CAACH,UAAU;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAS,CAAC,EAClE;IAAEN,IAAI,EAAE,eAAe;IAAEC,SAAS,eAAE7B,OAAA,CAACJ,aAAa;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAY,CAAC,CAC5E;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMmD,eAAe,GAAIC,KAAK,IAAK;IACjCF,eAAe,CAACE,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE/B,UAAU,CAACE,WAAW;IAC7BG,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAAC,aAAa;EACtD,CAAC,EACD;IACEyB,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE/B,UAAU,CAACG,WAAW;IAC7BE,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAAC,aAAa;EACtD,CAAC,EACD;IACEyB,KAAK,EAAE,eAAe;IACtBC,KAAK,EAAE/B,UAAU,CAACI,YAAY;IAC9BC,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAAC,cAAc;EACvD,CAAC,CACF;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAwC,QAAA,EAEGH,QAAQ,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEN,KAAK,kBAC3BtC,OAAA,CAACN,SAAS,CAACmD,IAAI;MAAaC,KAAK,EAAG,iBAAgBF,OAAO,CAACJ,KAAK,CAACO,WAAW,CAAC,CAAE,EAAE;MAAAL,QAAA,gBAChF1C,OAAA,CAACN,SAAS,CAACsD,OAAO;QAACC,EAAE,EAAC,SAAS;QAAAP,QAAA,EAAEE,OAAO,CAACJ;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAAC,eACnEjC,OAAA,CAACN,SAAS,CAACwD,KAAK;QAACD,EAAE,EAAC,SAAS;QAAAP,QAAA,EAE1BE,OAAO,CAACH,KAAK,iBACZzC,OAAA;UAAA0C,QAAA,gBAEE1C,OAAA,CAACb,IAAI;YAAAuD,QAAA,EAAC;UAAgB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7BjC,OAAA,CAACZ,WAAW;YAAC+D,CAAC,EAAC,MAAM;YAACC,IAAI,EAAC,IAAI;YAACC,MAAM,EAAC;UAAM;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAGhDjC,OAAA;YAAA0C,QAAA,gBACE1C,OAAA,CAACb,IAAI;cAAAuD,QAAA,EAAC;YAAU;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvBjC,OAAA;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC;IAAA,GAtBCK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuBV,CACjB;EAAC,gBACF,CAAC;AAEP,CAAC;AAAC7B,EAAA,CAnGID,iBAAiB;AAAAmD,EAAA,GAAjBnD,iBAAiB;AAqGvB,eAAeA,iBAAiB;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}