{"ast":null,"code":"var _jsxFileName = \"E:\\\\RBS Project\\\\Nusrat\\\\Mobile store plugin fontend2\\\\Development frontend\\\\mantine-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Grid, MantineProvider, createTheme } from \"@mantine/core\";\nimport \"@mantine/core/styles.css\";\nimport NavbarSegmented from \"./views/components/SideNavbar/NavbarSegmented\";\nimport ResponsivePhone from \"./views/components/ResponsivePhone\";\nimport { Drawer } from \"@mantine/core\"; // Import the Drawer component\nimport CategoryCustomize from \"./views/components/Customize/CategoryCustomize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  fontFamily: \"Open Sans, sans-serif\",\n  primaryColor: \"cyan\"\n});\nfunction App() {\n  _s();\n  const [selectAppBar, setSelectAppBar] = useState(false);\n  const [selectAppBar2, setSelectAppBar2] = useState(false);\n  const [selectedAppBarItem, setSelectedAppBarItem] = useState(null);\n  const [isCategoryCustomizeOpen, setIsCategoryCustomizeOpen] = useState(false); // Add state for the drawer\n\n  // Function to update the selected AppBar item in the state\n  const onItemClick = item => {\n    setSelectedAppBarItem(item);\n    setSelectAppBar(true); // Set the state to open ResponsivePhone\n    setIsCategoryCustomizeOpen(true); // Open the CategoryCustomize drawer\n  };\n\n  const [selectNavBar, setSelectNavBar] = useState(false);\n  const [selectNavBar2, setSelectNavBar2] = useState(false);\n  const [selectNavBar3, setSelectNavBar3] = useState(false);\n  const [selectedNavBarItem, setSelectedNavBarItem] = useState(null);\n\n  // Function to update the selected Navbar item in the state\n  const onNavBarItemClick = item => {\n    setSelectedNavBarItem(item);\n  };\n  return /*#__PURE__*/_jsxDEV(MantineProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: 4,\n        children: /*#__PURE__*/_jsxDEV(NavbarSegmented, {\n          selectAppBar: selectAppBar,\n          setSelectAppBar: setSelectAppBar,\n          selectAppBar2: selectAppBar2,\n          setSelectAppBar2: setSelectAppBar2,\n          onItemClick: onItemClick,\n          selectNavBar: selectNavBar,\n          setSelectNavBar: setSelectNavBar,\n          selectNavBar2: selectNavBar2,\n          setSelectNavBar2: setSelectNavBar2,\n          selectNavBar3: selectNavBar3,\n          setSelectNavBar3: setSelectNavBar3,\n          onNavBarItemClick: onNavBarItemClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: 4,\n        mt: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(ResponsivePhone, {\n          selectedAppBarItem: selectedAppBarItem,\n          selectedNavBarItem: selectedNavBarItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g/DuxvV0JNrbNgMkRRJwiLzLqrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Grid","MantineProvider","createTheme","NavbarSegmented","ResponsivePhone","Drawer","CategoryCustomize","jsxDEV","_jsxDEV","theme","fontFamily","primaryColor","App","_s","selectAppBar","setSelectAppBar","selectAppBar2","setSelectAppBar2","selectedAppBarItem","setSelectedAppBarItem","isCategoryCustomizeOpen","setIsCategoryCustomizeOpen","onItemClick","item","selectNavBar","setSelectNavBar","selectNavBar2","setSelectNavBar2","selectNavBar3","setSelectNavBar3","selectedNavBarItem","setSelectedNavBarItem","onNavBarItemClick","children","Col","span","fileName","_jsxFileName","lineNumber","columnNumber","mt","_c","$RefreshReg$"],"sources":["E:/RBS Project/Nusrat/Mobile store plugin fontend2/Development frontend/mantine-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, MantineProvider, createTheme } from \"@mantine/core\";\nimport \"@mantine/core/styles.css\";\nimport NavbarSegmented from \"./views/components/SideNavbar/NavbarSegmented\";\nimport ResponsivePhone from \"./views/components/ResponsivePhone\";\nimport { Drawer } from \"@mantine/core\"; // Import the Drawer component\nimport CategoryCustomize from \"./views/components/Customize/CategoryCustomize\";\n\nconst theme = createTheme({\n  fontFamily: \"Open Sans, sans-serif\",\n  primaryColor: \"cyan\",\n});\n\nfunction App() {\n  const [selectAppBar, setSelectAppBar] = useState(false);\n  const [selectAppBar2, setSelectAppBar2] = useState(false);\n  const [selectedAppBarItem, setSelectedAppBarItem] = useState(null);\n\n  const [isCategoryCustomizeOpen, setIsCategoryCustomizeOpen] = useState(false); // Add state for the drawer\n\n  // Function to update the selected AppBar item in the state\n  const onItemClick = (item) => {\n    setSelectedAppBarItem(item);\n    setSelectAppBar(true); // Set the state to open ResponsivePhone\n    setIsCategoryCustomizeOpen(true); // Open the CategoryCustomize drawer\n  };\n\n  const [selectNavBar, setSelectNavBar] = useState(false);\n  const [selectNavBar2, setSelectNavBar2] = useState(false);\n  const [selectNavBar3, setSelectNavBar3] = useState(false);\n  const [selectedNavBarItem, setSelectedNavBarItem] = useState(null);\n\n  // Function to update the selected Navbar item in the state\n  const onNavBarItemClick = (item) => {\n    setSelectedNavBarItem(item);\n  };\n\n  return (\n    <MantineProvider theme={theme}>\n      <Grid>\n        <Grid.Col span={4}>\n          <NavbarSegmented\n            selectAppBar={selectAppBar}\n            setSelectAppBar={setSelectAppBar}\n            selectAppBar2={selectAppBar2}\n            setSelectAppBar2={setSelectAppBar2}\n            onItemClick={onItemClick}\n            selectNavBar={selectNavBar}\n            setSelectNavBar={setSelectNavBar}\n            selectNavBar2={selectNavBar2}\n            setSelectNavBar2={setSelectNavBar2}\n            selectNavBar3={selectNavBar3}\n            setSelectNavBar3={setSelectNavBar3}\n            onNavBarItemClick={onNavBarItemClick}\n          />\n        </Grid.Col>\n        <Grid.Col span={4} mt=\"xs\">\n          <ResponsivePhone\n            selectedAppBarItem={selectedAppBarItem}\n            selectedNavBarItem={selectedNavBarItem}\n          />\n        </Grid.Col>\n        <Grid.Col span={4}>\n          {/* {selectAppBar ? (\n            <Drawer\n            title=\"Customize\"\n              opened={isCategoryCustomizeOpen}\n              onClose={() => setIsCategoryCustomizeOpen(false)}\n              position=\"right\"\n              transitionProps={{\n                transition: \"skew-down\",\n                duration: 1000,\n                timingFunction: \"linear\",\n              }}\n            >\n              <CategoryCustomize />\n            </Drawer>\n          ) : null} */}\n          \n        </Grid.Col>\n      </Grid>\n    </MantineProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}