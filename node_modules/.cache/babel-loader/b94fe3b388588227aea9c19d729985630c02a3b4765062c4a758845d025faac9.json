{"ast":null,"code":"import { useRef, useState, useEffect } from 'react';\nimport { clamp } from '../utils/clamp/clamp.js';\nconst clampUseMovePosition = position => ({\n  x: clamp(position.x, 0, 1),\n  y: clamp(position.y, 0, 1)\n});\nfunction useMove(onChange, handlers, dir = \"ltr\") {\n  const ref = useRef(null);\n  const mounted = useRef(false);\n  const isSliding = useRef(false);\n  const frame = useRef(0);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n  useEffect(() => {\n    var _a, _b;\n    const onScrub = ({\n      x,\n      y\n    }) => {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && ref.current) {\n          ref.current.style.userSelect = \"none\";\n          const rect = ref.current.getBoundingClientRect();\n          if (rect.width && rect.height) {\n            const _x = clamp((x - rect.left) / rect.width, 0, 1);\n            onChange({\n              x: dir === \"ltr\" ? _x : 1 - _x,\n              y: clamp((y - rect.top) / rect.height, 0, 1)\n            });\n          }\n        }\n      });\n    };\n    const bindEvents = () => {\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", stopScrubbing);\n      document.addEventListener(\"touchmove\", onTouchMove);\n      document.addEventListener(\"touchend\", stopScrubbing);\n    };\n    const unbindEvents = () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", stopScrubbing);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n      document.removeEventListener(\"touchend\", stopScrubbing);\n    };\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof (handlers == null ? void 0 : handlers.onScrubStart) === \"function\" && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        setActive(false);\n        unbindEvents();\n        setTimeout(() => {\n          typeof (handlers == null ? void 0 : handlers.onScrubEnd) === \"function\" && handlers.onScrubEnd();\n        }, 0);\n      }\n    };\n    const onMouseDown = event => {\n      startScrubbing();\n      event.preventDefault();\n      onMouseMove(event);\n    };\n    const onMouseMove = event => onScrub({\n      x: event.clientX,\n      y: event.clientY\n    });\n    const onTouchStart = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      startScrubbing();\n      onTouchMove(event);\n    };\n    const onTouchMove = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      onScrub({\n        x: event.changedTouches[0].clientX,\n        y: event.changedTouches[0].clientY\n      });\n    };\n    (_a = ref.current) == null ? void 0 : _a.addEventListener(\"mousedown\", onMouseDown);\n    (_b = ref.current) == null ? void 0 : _b.addEventListener(\"touchstart\", onTouchStart, {\n      passive: false\n    });\n    return () => {\n      if (ref.current) {\n        ref.current.removeEventListener(\"mousedown\", onMouseDown);\n        ref.current.removeEventListener(\"touchstart\", onTouchStart);\n      }\n    };\n  }, [dir, onChange]);\n  return {\n    ref,\n    active\n  };\n}\nexport { clampUseMovePosition, useMove };","map":{"version":3,"names":["clampUseMovePosition","position","x","clamp","y","useMove","onChange","handlers","dir","ref","useRef","mounted","isSliding","frame","active","setActive","useState","useEffect","current","_a","_b","onScrub","cancelAnimationFrame","requestAnimationFrame","style","userSelect","rect","getBoundingClientRect","width","height","_x","left","top","bindEvents","document","addEventListener","onMouseMove","stopScrubbing","onTouchMove","unbindEvents","removeEventListener","startScrubbing","onScrubStart","setTimeout","onScrubEnd","onMouseDown","event","preventDefault","clientX","clientY","onTouchStart","cancelable","changedTouches","passive"],"sources":["C:\\Users\\Tanzid\\Desktop\\Mantine-v7\\mantine-app\\node_modules\\@mantine\\hooks\\src\\use-move\\use-move.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { useEffect, useState, useRef } from 'react';\nimport { clamp } from '../utils';\n\nexport interface UseMovePosition {\n  x: number;\n  y: number;\n}\n\nexport const clampUseMovePosition = (position: UseMovePosition) => ({\n  x: clamp(position.x, 0, 1),\n  y: clamp(position.y, 0, 1),\n});\n\ninterface useMoveHandlers {\n  onScrubStart?(): void;\n  onScrubEnd?(): void;\n}\n\nexport function useMove<T extends HTMLElement = HTMLDivElement>(\n  onChange: (value: UseMovePosition) => void,\n  handlers?: useMoveHandlers,\n  dir: 'ltr' | 'rtl' = 'ltr'\n) {\n  const ref = useRef<T>(null);\n  const mounted = useRef<boolean>(false);\n  const isSliding = useRef(false);\n  const frame = useRef(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  useEffect(() => {\n    const onScrub = ({ x, y }: UseMovePosition) => {\n      cancelAnimationFrame(frame.current);\n\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && ref.current) {\n          ref.current.style.userSelect = 'none';\n          const rect = ref.current.getBoundingClientRect();\n\n          if (rect.width && rect.height) {\n            const _x = clamp((x - rect.left) / rect.width, 0, 1);\n            onChange({\n              x: dir === 'ltr' ? _x : 1 - _x,\n              y: clamp((y - rect.top) / rect.height, 0, 1),\n            });\n          }\n        }\n      });\n    };\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', stopScrubbing);\n      document.addEventListener('touchmove', onTouchMove);\n      document.addEventListener('touchend', stopScrubbing);\n    };\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', stopScrubbing);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', stopScrubbing);\n    };\n\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof handlers?.onScrubStart === 'function' && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        setActive(false);\n        unbindEvents();\n        setTimeout(() => {\n          typeof handlers?.onScrubEnd === 'function' && handlers.onScrubEnd();\n        }, 0);\n      }\n    };\n\n    const onMouseDown = (event: MouseEvent) => {\n      startScrubbing();\n      event.preventDefault();\n      onMouseMove(event);\n    };\n\n    const onMouseMove = (event: MouseEvent) => onScrub({ x: event.clientX, y: event.clientY });\n\n    const onTouchStart = (event: TouchEvent) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      startScrubbing();\n      onTouchMove(event);\n    };\n\n    const onTouchMove = (event: TouchEvent) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      onScrub({ x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    ref.current?.addEventListener('mousedown', onMouseDown);\n    ref.current?.addEventListener('touchstart', onTouchStart, { passive: false });\n\n    return () => {\n      if (ref.current) {\n        ref.current.removeEventListener('mousedown', onMouseDown);\n        ref.current.removeEventListener('touchstart', onTouchStart);\n      }\n    };\n  }, [dir, onChange]);\n\n  return { ref, active };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}